一、安装git
	$ git config --global user.name "Your Name"
	$ git config --global user.email "email@example.com"

二、初始化、添加文件
	初始化一个Git仓库，使用git init命令。
	使用命令git add <file>，注意，可反复多次使用，添加多个文件；
	使用命令git commit -m <message>，完成。

三、查看工作区状态
	git status
	如果git status告诉你有文件被修改过，用git diff可以查看修改内容。

四、版本回退
	HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git 	reset --hard commit_id。

	穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

	要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

五、工作区和暂存区
	暂存区是Git非常重要的概念，弄明白了暂存区，就弄明白了Git的很多操作到底干了什么。

六、管理修改
	每次修改，如果不用git add到暂存区，那就不会加入到commit中。

七、撤销修改
	场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git 		checkout -- file。

	场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步		，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。

	场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过		前提是没有推送到远程库。

八、删除文件
	命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删	，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。

九、添加远程仓库
	先创建ssh key 	$ ssh-keygen -t rsa -C "youremail@example.com"

	创建GitHub账号，添加ssh

	关联远程仓库 ： $ git remote add origin git@github.com:michaelliao/learngit.git
	
	推送本地仓库内容 : $ git push -u origin master
	
	总结：
		(1) 要关联一个远程库，使用命令git remote add origin git@server-			name:path/repo-name.git；

		(2) 关联后，使用命令git push -u origin master第一次推送master分支的所有内		    容；

		(3) 此后，每次本地提交后，只要有必要，就可以使用命令git push origin master		    推送最新修改；

		(4) 分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也		    就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有		    网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！


